type FarmSize {
    width: Int!
    height: Int!
}

type Item {
    name: ID!
    createTime: Float!
    output: Int!
    creator: String!
    size: FarmSize
}

type Requirement {
    name: ID!
    workers: Float!
}

enum OutputUnit {
    MINUTES
    GAME_DAYS
}

enum Tools {
    NONE
    STONE
    COPPER
    IRON
    BRONZE
    STEEL
}

input OptimalFilter {
    maxAvailableTool: Tools
}

input ItemsFilters {
    name: ID
    minimumCreators: Int
    creator: String
    optimal: OptimalFilter
}

type Query {
    distinctItemNames: [String!]!
    item(filters: ItemsFilters): [Item!]!
    requirement(
        name: ID!
        workers: Int!
        maxAvailableTool: Tools
    ): [Requirement!]!
    output(
        name: ID!
        workers: Int!
        unit: OutputUnit!
        maxAvailableTool: Tools
    ): Float!
}

schema {
    query: Query
}

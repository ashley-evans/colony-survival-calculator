name: Validate and Create Release

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    format:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Run formatters
              run: |
                  if [ "${{ github.ref }}" != "refs/heads/master" ]; then
                    lerna run format:check --since=origin/master
                  else
                    lerna run format:check
                  fi
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Run linters
              run: |
                  if [ "${{ github.ref }}" != "refs/heads/master" ]; then
                    lerna run lint --since=origin/master
                  else
                    lerna run lint
                  fi
    commit-lint:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Lint Commits
              run: |
                  npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
    validate:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-region: eu-west-2
                  role-to-assume: ${{ secrets.DEPLOY_ROLE_ARN }}
            - uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: 1.3.7
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Run validators
              run: |
                  if [ "${{ github.ref }}" != "refs/heads/master" ]; then
                    lerna run validate --since=origin/master
                  else
                    lerna run validate
                  fi
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Build Project
              run: |
                  if [ "${{ github.ref }}" != "refs/heads/master" ]; then
                    lerna run build --since=origin/master
                  else
                    lerna run build
                  fi
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Run Unit Tests
              run: |
                  if [ "${{ github.ref }}" != "refs/heads/master" ]; then
                    lerna run test --since=origin/master
                  else
                    lerna run test
                  fi
    deploy-dryrun:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-region: eu-west-2
                  role-to-assume: ${{ secrets.DEPLOY_ROLE_ARN }}
            - uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: 1.3.7
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Run dry run deployment
              run: |
                  if [ "${{ github.ref }}" != "refs/heads/master" ]; then
                    lerna run deploy:plan --since=origin/master -- -e prod
                  else
                    lerna run deploy:plan -- -e prod
                  fi
    create-release:
        runs-on: ubuntu-latest
        needs: [format, lint, validate, build, test, deploy-dryrun]
        if: ${{ github.ref == 'refs/heads/master' }}
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: "18.12.1"
            - uses: actions/cache@v3
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-dependencies-v1-
            - name: Install Dependencies
              run: |
                  npm run ci
            - name: Create Tags
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  npx semantic-release
